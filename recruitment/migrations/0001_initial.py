# Generated by Django 4.2.7 on 2025-07-02 23:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(max_length=20)),
                ('source', models.CharField(choices=[('website', 'Company Website'), ('linkedin', 'LinkedIn'), ('indeed', 'Indeed'), ('glassdoor', 'Glassdoor'), ('referral', 'Employee Referral'), ('recruiter', 'Recruiter'), ('job_fair', 'Job Fair'), ('other', 'Other')], default='website', max_length=20)),
                ('resume', models.FileField(upload_to='resumes/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])])),
                ('cover_letter', models.FileField(blank=True, null=True, upload_to='cover_letters/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])])),
                ('portfolio_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('new', 'New Application'), ('screening', 'Initial Screening'), ('phone_interview', 'Phone Interview'), ('technical_test', 'Technical Test'), ('onsite_interview', 'Onsite Interview'), ('final_interview', 'Final Interview'), ('reference_check', 'Reference Check'), ('offer_extended', 'Offer Extended'), ('offer_accepted', 'Offer Accepted'), ('offer_declined', 'Offer Declined'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='new', max_length=20)),
                ('stage_notes', models.TextField(blank=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('current_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notice_period_days', models.PositiveIntegerField(blank=True, null=True)),
                ('current_location', models.CharField(blank=True, max_length=200)),
                ('willing_to_relocate', models.BooleanField(default=False)),
                ('available_start_date', models.DateField(blank=True, null=True)),
                ('screening_responses', models.JSONField(blank=True, default=dict, help_text='Responses to job-specific screening questions')),
                ('internal_notes', models.TextField(blank=True)),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Rating from 1-10', null=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('assigned_recruiter', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['hr_manager', 'hiring_manager', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_applicants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Applicant',
                'verbose_name_plural': 'Applicants',
                'db_table': 'applicants',
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField(help_text='Detailed job description')),
                ('requirements', models.TextField(help_text='Job requirements and qualifications')),
                ('responsibilities', models.TextField(help_text='Key responsibilities')),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('temporary', 'Temporary'), ('intern', 'Internship')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('executive', 'Executive')], default='mid', max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('remote_work_allowed', models.BooleanField(default=False)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum salary range', max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum salary range', max_digits=10, null=True)),
                ('benefits', models.TextField(blank=True, help_text='Benefits and perks')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed'), ('filled', 'Filled')], default='draft', max_length=20)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('expected_start_date', models.DateField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('external_job_board_url', models.URLField(blank=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('applications_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_job_postings', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='job_postings', to='employees.department')),
                ('hiring_manager', models.ForeignKey(limit_choices_to={'role__in': ['hiring_manager', 'hr_manager', 'admin']}, on_delete=django.db.models.deletion.PROTECT, related_name='managed_job_postings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Posting',
                'verbose_name_plural': 'Job Postings',
                'db_table': 'job_postings',
            },
        ),
        migrations.CreateModel(
            name='JobOfferment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offered_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('signing_bonus', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('benefits_summary', models.TextField()),
                ('start_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('extended', 'Extended'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('withdrawn', 'Withdrawn'), ('expired', 'Expired')], default='draft', max_length=20)),
                ('offer_expiry_date', models.DateField()),
                ('offer_letter', models.FileField(blank=True, null=True, upload_to='offer_letters/%Y/%m/')),
                ('notes', models.TextField(blank=True)),
                ('extended_at', models.DateTimeField(blank=True, null=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='recruitment.applicant')),
                ('extended_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='extended_offers', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='recruitment.jobposting')),
            ],
            options={
                'verbose_name': 'Job Offer',
                'verbose_name_plural': 'Job Offers',
                'db_table': 'job_offers',
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_type', models.CharField(choices=[('phone', 'Phone Interview'), ('video', 'Video Interview'), ('onsite', 'Onsite Interview'), ('panel', 'Panel Interview'), ('technical', 'Technical Interview'), ('behavioral', 'Behavioral Interview'), ('final', 'Final Interview')], default='phone', max_length=20)),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('location', models.CharField(blank=True, help_text='Physical location or video call link', max_length=200)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('technical_score', models.PositiveIntegerField(blank=True, help_text='Technical skills rating (1-10)', null=True)),
                ('communication_score', models.PositiveIntegerField(blank=True, help_text='Communication skills rating (1-10)', null=True)),
                ('cultural_fit_score', models.PositiveIntegerField(blank=True, help_text='Cultural fit rating (1-10)', null=True)),
                ('overall_score', models.PositiveIntegerField(blank=True, help_text='Overall rating (1-10)', null=True)),
                ('strengths', models.TextField(blank=True)),
                ('weaknesses', models.TextField(blank=True)),
                ('detailed_feedback', models.TextField(blank=True)),
                ('recommendation', models.CharField(blank=True, choices=[('strong_yes', 'Strong Yes'), ('yes', 'Yes'), ('maybe', 'Maybe'), ('no', 'No'), ('strong_no', 'Strong No')], max_length=20, null=True)),
                ('preparation_notes', models.TextField(blank=True, help_text='Notes for interviewer preparation')),
                ('questions_asked', models.TextField(blank=True)),
                ('is_final_round', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('additional_interviewers', models.ManyToManyField(blank=True, help_text='Additional interviewers for panel interviews', related_name='panel_interviews', to=settings.AUTH_USER_MODEL)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='recruitment.applicant')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='scheduled_interviews', to=settings.AUTH_USER_MODEL)),
                ('interviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conducted_interviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Interview',
                'verbose_name_plural': 'Interviews',
                'db_table': 'interviews',
            },
        ),
        migrations.AddField(
            model_name='applicant',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicants', to='recruitment.jobposting'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='referrer',
            field=models.ForeignKey(blank=True, help_text='Employee who referred this candidate', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referred_applicants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['status', 'department'], name='job_posting_status_29aea2_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['slug'], name='job_posting_slug_9904c1_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['created_at'], name='job_posting_created_cb6fcb_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['application_deadline'], name='job_posting_applica_9bf91d_idx'),
        ),
        migrations.AddIndex(
            model_name='jobofferment',
            index=models.Index(fields=['applicant', 'status'], name='job_offers_applica_344ee2_idx'),
        ),
        migrations.AddIndex(
            model_name='jobofferment',
            index=models.Index(fields=['job'], name='job_offers_job_id_7325b2_idx'),
        ),
        migrations.AddIndex(
            model_name='jobofferment',
            index=models.Index(fields=['offer_expiry_date'], name='job_offers_offer_e_4320f9_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['applicant', 'status'], name='interviews_applica_9ae33c_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['interviewer', 'scheduled_date'], name='interviews_intervi_80998c_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['scheduled_date', 'scheduled_time'], name='interviews_schedul_d6a0cc_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['status'], name='interviews_status_d52ded_idx'),
        ),
        migrations.AddIndex(
            model_name='applicant',
            index=models.Index(fields=['job', 'status'], name='applicants_job_id_022248_idx'),
        ),
        migrations.AddIndex(
            model_name='applicant',
            index=models.Index(fields=['email'], name='applicants_email_323aeb_idx'),
        ),
        migrations.AddIndex(
            model_name='applicant',
            index=models.Index(fields=['applied_at'], name='applicants_applied_2ddc5a_idx'),
        ),
        migrations.AddIndex(
            model_name='applicant',
            index=models.Index(fields=['assigned_recruiter'], name='applicants_assigne_b6c5af_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='applicant',
            unique_together={('email', 'job')},
        ),
    ]
